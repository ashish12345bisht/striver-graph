#include <iostream>
#include <vector>
#include <queue>
using namespace std;
void dfs(vector<int> &v,  vector<int> adj[], int node){
    v[node]=1;
    cout<<node<<" ";
    for(int i=0;i<adj[node].size();i++){
        if(!v[adj[node][i]]){
            dfs(v,adj,adj[node][i]);
        }
    }
}
int main() {
    int m, n;
    cin>>m>>n;
    vector<int> adj[n+1];
    for(int i=0;i<n;i++){
        int u, v;
        cin>>u>>v;
        adj[u].push_back(v);
        adj[v].push_back(u);
    }
    //-------print to check the adjacency list
    // for(int i=1;i<n+1;i++){
    //     cout<<i<<" ";
    //     for(int j=0;j<adj[i].size();j++){
    //         cout<<adj[i][j]<<" ";
    //     }
    //     cout<<endl;
    // }
    vector<int> v(m+1,0);
    dfs(v,adj,1);
}

//example input

8 8
1 2
1 3
2 5
2 6
3 4
3 7
7 8
4 8